@model IEnumerable<Campsite>

<h2>Търсене на места за къмпингуване</h2>

<form asp-action="Search" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="searchTerm">Търсене по текст:</label>
                <input type="text" name="searchTerm" id="searchTerm" class="form-control" value="@Context.Request.Query["searchTerm"]" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="lat">Географска ширина:</label>
                    <input type="number" step="any" name="lat" id="lat" class="form-control" value="@Context.Request.Query["lat"]" />
                </div>
                <div class="form-group col-md-4">
                    <label for="lng">Географска дължина:</label>
                    <input type="number" step="any" name="lng" id="lng" class="form-control" value="@Context.Request.Query["lng"]" />
                </div>
                <div class="form-group col-md-4">
                    <label for="distance">Разстояние (km):</label>
                    <input type="number" step="any" name="distance" id="distance" class="form-control" value="@Context.Request.Query["distance"]" />
                </div>
            </div>
            <button type="button" class="btn btn-info mb-2" id="useMyLocation">Използвай моята локация</button>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Търсене</button>
</form>

<div class="row">
    <div class="col-md-6">
        <div class="list-group mb-4">
            @if (Model.Any())
            {
                @foreach (var campsite in Model)
                {
                    <a href="@Url.Action("Details", new { id = campsite.Id })" class="list-group-item list-group-item-action campsite-item"
                       data-id="@campsite.Id" data-lat="@campsite.Latitude" data-lng="@campsite.Longitude">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@campsite.Name</h5>
                        </div>
                        <p class="mb-1">@(campsite.Description?.Length > 100 ? campsite.Description.Substring(0, 100) + "..." : campsite.Description)</p>
                        @if (!string.IsNullOrEmpty(campsite.ImagePath))
                        {
                            <img src="@campsite.ImagePath" alt="@campsite.Name" class="img-thumbnail mt-2" style="max-width: 150px;" />
                        }
                    </a>
                }
            }
            else
            {
                <div class="alert alert-info">
                    Няма намерени къмпинг места, отговарящи на критериите.
                </div>
            }
        </div>
    </div>
    <div class="col-md-6">
        <div id="map" style="height: 500px;"></div>
    </div>
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap" async defer></script>
    <script>
        let map;
        let markers = [];

        function initMap() {
            // Център на България по подразбиране
            const defaultCenter = { lat: 42.7339, lng: 25.4858 };

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 7,
                center: defaultCenter,
            });

            // Добавяме маркери за всички къмпинг места
        @foreach (var campsite in Model)
        {
            @:addMarker({ lat: @campsite.Latitude, lng: @campsite.Longitude }, "@campsite.Name", @campsite.Id);
        }

            // Ако има избрана локация, центрираме картата
            const urlParams = new URLSearchParams(window.location.search);
            const lat = parseFloat(urlParams.get('lat'));
            const lng = parseFloat(urlParams.get('lng'));

            if (lat && lng) {
                map.setCenter({ lat, lng });
                map.setZoom(10);
            }
        }

        function addMarker(position, title, id) {
            const marker = new google.maps.Marker({
                position,
                map,
                title
            });

            const infoWindow = new google.maps.InfoWindow({
                content: `<div><strong>${title}</strong><br><a href="/Campsite/Details/${id}">Детайли</a></div>`
            });

            marker.addListener("click", () => {
                infoWindow.open(map, marker);
            });

            markers.push(marker);
            return marker;
        }

        // Използване на текущата локация
        document.getElementById("useMyLocation").addEventListener("click", function() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        document.getElementById("lat").value = position.coords.latitude;
                        document.getElementById("lng").value = position.coords.longitude;
                        document.getElementById("distance").value = 50; // примерно разстояние 50 км
                    },
                    () => {
                        alert("Не може да се определи текущата локация.");
                    }
                );
            } else {
                alert("Вашият браузър не поддържа геолокация.");
            }
        });

        // Подсветване на маркера при hover върху елемент от списъка
        document.querySelectorAll(".campsite-item").forEach(item => {
            item.addEventListener("mouseenter", function() {
                const id = this.getAttribute("data-id");
                const lat = parseFloat(this.getAttribute("data-lat"));
                const lng = parseFloat(this.getAttribute("data-lng"));

                // Намиране на съответстващия маркер и анимиране
                for (let i = 0; i < markers.length; i++) {
                    if (markers[i].getPosition().lat() === lat && markers[i].getPosition().lng() === lng) {
                        markers[i].setAnimation(google.maps.Animation.BOUNCE);
                        break;
                    }
                }
            });

            item.addEventListener("mouseleave", function() {
                // Спиране на анимацията на всички маркери
                markers.forEach(marker => marker.setAnimation(null));
            });
        });
    </script>
}